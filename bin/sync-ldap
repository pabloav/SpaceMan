#!/usr/bin/perl
use strict; use warnings;
use lib '/opt/spaceman/lib';
use SpaceMan;
use SpaceMan::Config;
use Net::LDAP;

my $man = SpaceMan->new;

my $people = $man->rs( 'Person' );
my $groups = $man->rs( 'Group' );

# TODO - figure out what to do when there are duplicate names
my %people = ();
my %groups = ();

while ( my $person = $people->next ) {
    next unless $person->posix_uid;
    $people{ $person->dn } = $person;
}
while ( my $group = $groups->next ) {
    next unless $group->posix_gid;
    $groups{ $group->dn } = $group;
}

my $ldap = Net::LDAP->new( 'localhost', onerror => 'die' ) or die "$@";
$ldap->bind(
    $man->config->ldap_sync_dn,
    password => $man->config->ldap_sync_password,
);

# Sync people
my $mesg1 = $ldap->search(
    base    => "ou=People,".$man->config->ldap_base,
    filter  => '(|(objectClass=posixAccount)(objectClass=groupOfNames))',
);

for my $entry ( $mesg1->entries  ) {
    if ( my $db = delete $people{ $entry->dn } ) {
        $ldap->modify( $db->dn, replace => { $db->ldap_attrs } );
    } else {
        $ldap->delete( $entry->dn );
    }
}
for my $person ( values %people ) {
    print "ADD: ".$person->dn."\n";
    $ldap->add( $person->dn, attr => [ $person->ldap_attrs ] );
}

my $mesg2 = $ldap->search(
    base    => "ou=Groups,".$man->config->ldap_base,
    filter  => '(objectClass=posixGroup)',
);

for my $entry ( $mesg2->entries  ) {
    if ( my $db = delete $groups{ $entry->dn } ) {
        $ldap->modify( $db->dn, replace => { $db->ldap_attrs } );
    } else {
        $ldap->delete( $entry->dn );
    }
}
for my $group ( values %groups ) {
    print "ADD: ".$group->dn."\n";
    $ldap->add( $group->dn, attr => [ $group->ldap_attrs ] );
}
